{
	"information_for_contributors": [
	  "This file is hosted at https://github.com/Autoblocks/Autoblocks-TmLanguage",
	  "Bug fixes, feature requests and pull requests are welcome."
	],
	"version": "https://github.com/Autoblocks/Autoblocks-TmLanguage/commit/c60fdafb0de2d7710d4b900796de2f82039d40d5",
	"name": "Autoblocks",
	"uuid": "fb96d833-4bae-49f8-8149-f32df5ec0669",
	"scopeName": "source.Autoblocks",
	"fileTypes": [
	  "AB",
	  "IL",
	  "FBD",
	  "LD",
	  "ST",
	  "SFC"
	],
	"patterns": [
	  {
		"include": "#main"
	  }
	],
	"repository": {
	  "main": {
		"patterns": [
		  {
			"match": "(\\(\\*.*?\\*\\))",
			"name": "comment.Autoblocks"
		  },
		  {
			"match": "('.*?')",
			"name": "string.Autoblocks"
		  },
		  {
			"match": "(;)",
			"name": "punctuation.Autoblocks"
		  },
		  {
			"match": "(%(I|Q|M)(X|B|W|D|L|\\*)([0-9]*[0-9])(\\.([0-9]*[0-9]))*)",
			"name": "variable.other.Autoblocks"
		  },
		  {
			"match": "(\\b(ADD|SUB|MUL|DIV|MOD|GT|GE|EQ|NE|LE|LT|JMPC|JMP|CALCN|CALC|CAL|RETCN|RETC|RET|ANDN|AND|ORN|XORN|STN|CAL|LDN|LD|STN|ST|S|R|NOT|MOD|AND|XOR|OR|SQRT)\\b)",
			"name": "keyword.operator.Autoblocks"
		  },
		  {
			"match": "(((t|T|time|TIME)#([0-9][0-9])(:([0-9][0-9]))+)|((t|T|time|TIME)#-?([0-9]*[0-9]+d)?(_?[0-9]*[0-9]+h)?(_?([0-9]*[0-9]+m)(?!s))?(_?[0-9]*[0-9]+s)?(_?[0-9]*[0-9]+ms)?))",
			"name": "constant.numeric.Autoblocks"
		  },
		  {
			"match": "((dt|DT|date_and_time|DATE_AND_TIME)#[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]-[0-9][0-9]:[0-9][0-9](:([0-9][0-9]))?(.([0-9][0-9]))?)",
			"name": "constant.numeric.Autoblocks"
		  },
		  {
			"match": "((t|T|time|TIME)#[0-9][0-9]:[0-9][0-9](:([0-9][0-9]))?(.([0-9][0-9]))?)",
			"name": "constant.numeric.Autoblocks"
		  },
		  {
			"match": "((16|8|2)#[0-9A-F]+)",
			"name": "constant.numeric.Autoblocks"
		  },
		  {
			"match": "([-]?[0-9]*\\.?[0-9]+(E-?[0-9]+)?)",
			"name": "constant.numeric.Autoblocks"
		  },
		  {
			"match": "(TRUE|FALSE)",
			"name": "constant.language.Autoblocks"
		  },
		  {
			"match": "(:=>|:=|<=|>=|\\.\\.|:|\\(|\\)|\\*\\*|\\*|\\/|\\+|-|<|>|=|<>|&|,|\\[|\\]|#|%)",
			"name": "punctuation.Autoblocks"
		  },
		  {
			"include": "#struct"
		  },
		  {
			"match": "(\\b(EXPONENT|CARDINAL|INTEGER|RETAIN|NON_RETAIN|CONSTANT|R_EDGE|F_EDGE|VAR_INPUT|VAR_OUTPUT|VAR_IN_OUT|VAR_EXTERNAL|VAR_GLOBAL|VAR_ACCESS|VAR_TEMP|VAR_CONFIG|END_CONFIGURATION|CONFIGURATION|END_RESOURCE|RESOURCE|END_VAR|VAR|END_PROGRAM|END_FUNCTION_BLOCK|END_FUNCTION|FUNCTION_BLOCK|FUNCTION|PROGRAM|END_TYPE|TYPE|ARRAY|AT|WITH|TASK|ON)\\b)",
			"name": "keyword.Autoblocks"
		  },
		  {
			"match": "(\\b(USINT|UDINT|ULINT|UINT|LINT|DINT|SINT|INT|LREAL|REAL|TIME_OF_DAY|DATE_AND_TIME|TIME|DATE|WSTRING|STRING|LWORD|DWORD|WORD|BOOL|BYTE|TON|TOFF|TOD|DT|BINARY|HEX)\\b)",
			"name": "storage.type.Autoblocks"
		  },
		  {
			"match": "(READ_ONLY|READ_WRITE)",
			"name": "storage.modifier.Autoblocks"
		  },
		  {
			"match": "(\\b(RETURN|IF|THEN|ELSIF|ELSE|END_IF|CASE|OF|END_CASE|FOR|TO|BY|DO|WHILE|END_WHILE|REPEAT|UNTIL|END_REPEAT|EXIT)\\b)",
			"name": "keyword.Autoblocks"
		  },
		  {
			"match": "(\\b(END_TRANSITION|TRANSITION|END_ACTION|ACTION|END_STEP|STEP|FROM|TO)\\b)",
			"name": "keyword.Autoblocks"
		  },
		  {
			"match": "(\\b(_[A-Za-z][A-Za-z0-9]*)|([A-Za-z][A-Za-z0-9_]*)\\b)",
			"name": "variable.other.Autoblocks"
		  },
		  {
			"match": "()",
			"name": "variable.other.Autoblocks"
		  },
		  {
			"match": "(,)",
			"name": "punctuation.Autoblocks"
		  },
		  {
			"match": "(\\.)",
			"name": "punctuation.Autoblocks"
		  },
		  {
			"match": "([^\\s])",
			"name": "invalid.Autoblocks"
		  }
		]
	  },
	  "struct": {
		"patterns": [
		  {
			"begin": "(\\b(STRUCT)\\b)",
			"beginCaptures": {
			  "1": {
				"name": "keyword.Autoblocks"
			  }
			},
			"patterns": [
				{
				  "match": "(\\(\\*.*?\\*\\))",
				  "name": "comment.Autoblocks"
				},
				{
				  "match": "(\\b(USINT|UDINT|ULINT|UINT|LINT|DINT|SINT|INT|LREAL|REAL|TIME_OF_DAY|DATE_AND_TIME|TIME|DATE|WSTRING|STRING|LWORD|DWORD|WORD|BOOL|BYTE|TON|TOFF|TOD|DT|BINARY|HEX)\\b)",
				  "name": "storage.type.Autoblocks"
				},
				{
				  "match": "(;)",
				  "name": "punctuation.Autoblocks"
				},
				{
				  "match": "(:=>|:=|<=|>=|\\.\\.|:|\\(|\\)|\\*\\*|\\*|\\/|\\+|-|<|>|=|<>|&|,|\\[|\\]|#|%)",
				  "name": "punctuation.Autoblocks"
				},
				{
				  "match": "(\\b(_[A-Za-z][A-Za-z0-9]*)|([A-Za-z][A-Za-z0-9_]*)\\b)",
				  "name": "variable.other.Autoblocks"
				}
			],
			"end": "(\\b(END_STRUCT)\\b)",
			"endCaptures": {
			  "1": {
				"name": "keyword.Autoblocks"
			  }
			}
		  }
		]
	  }
	}
  }